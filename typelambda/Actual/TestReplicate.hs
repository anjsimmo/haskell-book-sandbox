-- Generated by testgen.sh
module Actual.TestReplicate where
import TypeLambda
import Data.Typeable
import Expected.TestReplicate as E
import System.IO

x :: [((L(V(X,X))((L(V(X,()))((V(X,X)),((V(X,())),(V(X,()))))),(L(V(X,()))((V(X,X)),((V(X,())),(V(X,()))))))),(L(V((),()))(L(V(X,X,X))(L(V(X,()))(Iff,(Cons,(V(X,())),((V((),())),(Minus,(V(X,X,X)),Integer),(V(X,())))),(),((L(V(X,()))(L(V((),X))(Iff,Integer,Int,(Minus,(V(X,())),(V((),X)))))),(V(X,X,X)),Int))))))]
x = []

lam :: Result
lam = eval prims (typeOf x)

main :: IO ()
main = do
  putStrLn "Expected (Haskell): "
  putStrLn $ E.showExpected
  putStrLn "Actual (Lambda): "
  putStrLn $ E.showActual lam
  putStr "Test Result (Haskell ?= Lambda): "
  putStrLn $ show $ E.oracle lam
